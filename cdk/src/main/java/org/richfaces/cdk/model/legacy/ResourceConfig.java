/*
 =================== DO NOT EDIT THIS FILE ====================
 Generated by Modello 1.0.2 on 2014-10-23 14:13:56,
 any modifications will be overwritten.
 ==============================================================
 */

package org.richfaces.cdk.model.legacy;

/**
 * Class ResourceConfig.
 * 
 * @version $Revision$ $Date$
 */
public class ResourceConfig
    implements java.io.Serializable
{

      //--------------------------/
     //- Class/Member Variables -/
    //--------------------------/

    /**
     * Field resources.
     */
    private java.util.List/*<Resource>*/ resources;

    /**
     * Field modelEncoding.
     */
    private String modelEncoding = "UTF-8";


      //-----------/
     //- Methods -/
    //-----------/

    /**
     * Method addResource.
     * 
     * @param resource
     */
    public void addResource( Resource resource )
    {
        if ( !(resource instanceof Resource) )
        {
            throw new ClassCastException( "ResourceConfig.addResources(resource) parameter must be instanceof " + Resource.class.getName() );
        }
        getResources().add( resource );
    } //-- void addResource( Resource )

    /**
     * Method getModelEncoding.
     * 
     * @return the current encoding used when reading/writing this
     * model
     */
    public String getModelEncoding()
    {
        return modelEncoding;
    } //-- String getModelEncoding()

    /**
     * Method getResources.
     * 
     * @return List
     */
    public java.util.List/*<Resource>*/ getResources()
    {
        if ( this.resources == null )
        {
            this.resources = new java.util.ArrayList/*<Resource>*/();
        }

        return this.resources;
    } //-- java.util.List/*<Resource>*/ getResources()

    /**
     * Method removeResource.
     * 
     * @param resource
     */
    public void removeResource( Resource resource )
    {
        if ( !(resource instanceof Resource) )
        {
            throw new ClassCastException( "ResourceConfig.removeResources(resource) parameter must be instanceof " + Resource.class.getName() );
        }
        getResources().remove( resource );
    } //-- void removeResource( Resource )

    /**
     * Set an encoding used for reading/writing the model.
     * 
     * @param modelEncoding
     */
    public void setModelEncoding( String modelEncoding )
    {
        this.modelEncoding = modelEncoding;
    } //-- void setModelEncoding( String )

    /**
     * Set the resources field.
     * 
     * @param resources
     */
    public void setResources( java.util.List/*<Resource>*/ resources )
    {
        this.resources = resources;
    } //-- void setResources( java.util.List )

//
			    public boolean containsResource(Resource res) {
			    	return resources != null && resources.contains(res);
			    }
							
				//
}
